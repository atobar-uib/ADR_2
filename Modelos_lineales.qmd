# Modelos lineales generalizados (GLM)



## üìñ Cap√≠tulo 1: Introducci√≥n a los Modelos Lineales Generalizados

### Objetivos del cap√≠tulo: {-}
- Entender las limitaciones de la regresi√≥n lineal cl√°sica
- Conocer qu√© son los Modelos Lineales Generalizados (GLM)
- Aprender por qu√© son esenciales en an√°lisis m√©dicos y sanitarios
- Familiarizarse con la estructura b√°sica de un GLM


### ¬øQu√© son los Modelos Lineales Generalizados? {-}

Los **Modelos Lineales Generalizados (GLM, por sus siglas en ingl√©s)** son una extensi√≥n de los modelos lineales tradicionales que permiten modelar variables respuesta que no se distribuyen normalmente.

Fueron introducidos por Nelder y Wedderburn en 1972 como una forma flexible de abordar muchos tipos de datos comunes en investigaci√≥n, especialmente cuando:

- La variable dependiente es **binaria** (s√≠/no, √©xito/fracaso)
- Es un **conteo** (n√∫mero de hospitalizaciones, eventos adversos)
- Es **positiva y continua**, pero no normal (gastos sanitarios, tiempo de recuperaci√≥n)


## Limitaciones de la regresi√≥n lineal en medicina {-}

La **regresi√≥n lineal cl√°sica** asume lo siguiente:

- La variable respuesta sigue una **distribuci√≥n normal**
- La relaci√≥n entre las variables independientes y la dependiente es **lineal**
- Los residuos tienen **varianza constante** (homocedasticidad)

Sin embargo, estas condiciones **rara vez se cumplen** en muchos estudios m√©dicos. Por ejemplo:

### Ejemplo 1: Variable binaria ‚Äì √âxito o fracaso quir√∫rgico {-}
Imagina que est√°s analizando si un paciente tiene complicaciones tras una cirug√≠a (s√≠ = 1, no = 0). Si usas un modelo lineal:

- Podr√≠as predecir valores fuera del rango [0,1], lo cual no tiene sentido
- El error tendr√≠a varianza distinta seg√∫n el valor predicho ‚Üí viola el supuesto de homocedasticidad

### Ejemplo 2: Conteos ‚Äì N√∫mero de reingresos hospitalarios {-}
Si est√°s contando cu√°ntas veces un paciente ha sido ingresado en el √∫ltimo a√±o:

- Estos datos suelen tener muchos ceros y pocos valores altos ‚Üí cola derecha pesada
- No pueden ser negativos ‚Üí la normalidad no es adecuada
- Usar una regresi√≥n lineal podr√≠a dar predicciones negativas

### Ejemplo 3: Tiempo de recuperaci√≥n ‚Äì Variable positiva y sesgada {-}
En lugar de usar una regresi√≥n lineal, que asume simetr√≠a, ser√≠a m√°s apropiado usar una distribuci√≥n como **Gamma** o **log-normal**


### ¬øPor qu√© usar GLM en medicina? {-}

Los GLM son una herramienta fundamental en investigaci√≥n m√©dica porque:

### ‚úÖ Permiten trabajar con distintos tipos de variables  {-}
- Binarias (log√≠stica)
- De conteo (Poisson, binomial negativa)
- Positivas continuas (Gamma)

### ‚úÖ Ofrecen interpretaciones cl√≠nicas √∫tiles  {-}
- En log√≠stica: **odds ratios**
- En Poisson: **tasas relativas**
- En Gamma: **relaciones multiplicativas en tiempos o costes**

### ‚úÖ Mejoran la precisi√≥n al respetar la naturaleza de los datos  {-}
No forzan una distribuci√≥n normal donde no existe, mejorando la validez estad√≠stica de los resultados

### ‚úÖ Son f√°ciles de implementar en R {-}
Con funciones b√°sicas como `glm()` y paquetes adicionales como `broom`, `effects` o `visreg`, podemos construir, visualizar e interpretar modelos r√°pidamente


### Caso pr√°ctico introductorio: Predicci√≥n de bajo peso al nacer {-}

Para ilustrar c√≥mo pueden aplicarse los GLM en medicina, vamos a usar el conjunto de datos `birthwt` del paquete `MASS`. Este dataset contiene informaci√≥n sobre 189 embarazos y si el beb√© naci√≥ con bajo peso (< 2500 gramos).

```{r}
library(MASS)
data(birthwt)
str(birthwt)
```

Algunas variables relevantes:
- `low`: 1 si el beb√© naci√≥ con bajo peso, 0 en caso contrario
- `age`: edad de la madre
- `lwt`: peso en la √∫ltima menstruaci√≥n
- `smoke`: si la madre fumaba durante el embarazo
- `ptl`: n√∫mero de partos prematuros previos
- `ht`: hipertensi√≥n arterial
- `ui`: irritabilidad uterina

Este tipo de problema requiere un **modelo log√≠stico**, ya que la variable dependiente es binaria. Veremos c√≥mo construirlo y c√≥mo interpretarlo en el pr√≥ximo cap√≠tulo.


### Herramientas en R para GLM {-}

Trabajaremos principalmente con estos paquetes:

| Paquete     | Funcionalidad                          |
|-------------|----------------------------------------|
| `stats`     | `glm()` - Modelo base                 |
| `MASS`      | `glm.nb()` - Regresi√≥n binomial negativa |
| `broom`     | Res√∫menes limpios de modelos          |
| `visreg`    | Visualizaci√≥n de efectos              |
| `pROC`      | Curvas ROC y AUC                      |
| `DHARMa`    | Diagn√≥stico de residuos               |

Inst√°lalos ahora si no los tienes:

```{r,eval=FALSE}
install.packages(c("MASS", "broom", "visreg", "pROC", "DHARMa"))
```







## üìò Cap√≠tulo 2: Conceptos b√°sicos de los Modelos Lineales Generalizados (GLM)

### Objetivos del cap√≠tulo:
- Comprender qu√© es un modelo lineal generalizado
- Distinguir entre regresi√≥n lineal y GLM
- Conocer los tres componentes principales de un GLM
- Entender las funciones de distribuci√≥n y enlace m√°s usadas
- Saber c√≥mo elegir el modelo adecuado seg√∫n el tipo de variable



### ¬øQu√© es un Modelo Lineal Generalizado?

Un **Modelo Lineal Generalizado (GLM)** es una extensi√≥n de los modelos lineales cl√°sicos que permite modelar variables respuesta que no siguen una distribuci√≥n normal.

A diferencia de la regresi√≥n lineal tradicional, los GLM permiten:

- Modelar variables dependientes **no normales**: binarias, conteos, positivas continuas...
- Usar una **funci√≥n de enlace** para relacionar la media de la variable respuesta con una combinaci√≥n lineal de predictores
- Trabajar sin asumir homocedasticidad ni normalidad de errores

En resumen, son ideales para muchas situaciones comunes en investigaci√≥n m√©dica.


### Los tres componentes de un GLM

Un GLM se define por tres elementos fundamentales:

### 1. **Funci√≥n de distribuci√≥n** {-}
Es la distribuci√≥n estad√≠stica de la variable respuesta. Algunas distribuciones comunes son:

| Distribuci√≥n | Tipo de variable                    |
|--------------|-------------------------------------|
| Binomial     | Variable binaria (s√≠/no)            |
| Poisson      | Conteos                             |
| Gamma        | Variables positivas continuas       |
| Gama inversa | Tiempos hasta un evento             |
| Binomial negativa | Conteos con sobredispersi√≥n   |

### 2. **Funci√≥n de enlace** {-}
Es la relaci√≥n matem√°tica entre la media de la variable respuesta ($\mu$) y la combinaci√≥n lineal de predictores ($\eta$).

$$ g(\mu) = \beta_0 + \beta_1 x_1 + \dots + \beta_p x_p $$

Algunas funciones de enlace comunes:

| Distribuci√≥n | Funci√≥n de enlace t√≠pica |
|--------------|---------------------------|
| Binomial     | Logit                     |
| Poisson      | Log                       |
| Gamma        | Inversa                   |
| Normal       | Identidad                 |

üí° Ejemplo: En la regresi√≥n log√≠stica, la funci√≥n de enlace es el **logit**, que transforma probabilidades en valores reales.

### 3. **Componente sistem√°tico** {-}
Es la parte lineal del modelo, formada por la combinaci√≥n de las variables independientes.

$$ \eta = X \beta $$

Donde $X$ es la matriz de dise√±o (variables independientes) y $\beta$ son los coeficientes estimados.


### Tipos de GLM seg√∫n la variable dependiente {-}

Dependiendo del tipo de variable que queramos modelar, utilizaremos distintas combinaciones de distribuci√≥n y funci√≥n de enlace:

### üîπ Regresi√≥n log√≠stica (variable binaria)
- **Distribuci√≥n:** Binomial
- **Funci√≥n de enlace:** Logit
- **Ejemplo m√©dico:** predecir si un paciente desarrollar√° diabetes (s√≠/no)

```{r}
set.seed(123)  # Para reproducibilidad

n <- 500
datos_medicos <- data.frame(
  edad = round(rnorm(n, mean = 55, sd = 10)),
  imc = round(rnorm(n, mean = 28, sd = 4), 1),
  presion = round(rnorm(n, mean = 130, sd = 15)),
  colesterol = round(rnorm(n, mean = 200, sd = 40)),
  fumador = rbinom(n, 1, 0.3),
  familia_diab = rbinom(n, 1, 0.25)
)

# Calculamos el logaritmo de las odds
log_odds <- with(datos_medicos,
                 -6 + 0.05 * edad + 0.1 * imc + 0.02 * presion +
                 0.01 * colesterol + 0.8 * fumador + 1.2 * familia_diab)

# Convertimos a probabilidades con la funci√≥n log√≠stica
prob_diabetes <- plogis(log_odds)

prob_diabetes <- (prob_diabetes - min(prob_diabetes)) / (max(prob_diabetes) - min(prob_diabetes))

# Generamos la variable binaria final
datos_medicos$diabetes <- rbinom(n, 1, prob_diabetes)

modelo_logistico <- glm(diabetes ~ edad + imc + fumador,
                        data = datos_medicos, family = binomial(link = "logit"))
```
 
### üîπ Regresi√≥n de Poisson (conteos) {-}
- **Distribuci√≥n:** Poisson
- **Funci√≥n de enlace:** Log
- **Ejemplo m√©dico:** n√∫mero de hospitalizaciones en un a√±o

```{r}
set.seed(456)  # Para reproducibilidad

n <- 300
datos_hosp <- data.frame(
  edad = round(rnorm(n, mean = 65, sd = 10)),
  enfermedad = sample(c("HTA", "Diabetes", "EPOC"), n, replace = TRUE),
  bmi = round(rnorm(n, mean = 28, sd = 4), 1),
  fumador = rbinom(n, 1, 0.3),
  tiempo_enfermedad = round(runif(n, min = 1, max = 15), 1)
)
# Calculamos el lambda (tasa media de hospitalizaci√≥n) usando un modelo log-lineal
lambda <- exp(-2 + 0.03 * datos_hosp$edad +
              ifelse(datos_hosp$enfermedad == "Diabetes", 0.4,
                     ifelse(datos_hosp$enfermedad == "EPOC", 0.7, 0)) +
              0.02 * datos_hosp$bmi +
              0.5 * datos_hosp$fumador +
              0.05 * datos_hosp$tiempo_enfermedad)

# Generamos el n√∫mero de hospitalizaciones usando una distribuci√≥n Poisson
datos_hosp$hospitalizaciones <- rpois(n, lambda = lambda)


modelo_poisson <- glm(hospitalizaciones ~ edad + enfermedad,
                      data = datos_hosp, family = poisson())
```

### üîπ Regresi√≥n Gamma (variables positivas continuas) {-}
- **Distribuci√≥n:** Gamma
- **Funci√≥n de enlace:** Inversa o log
- **Ejemplo m√©dico:** tiempo de recuperaci√≥n tras cirug√≠a

```{r}
set.seed(789)  # Para reproducibilidad

n <- 400
datos_cirugia <- data.frame(
  edad = round(rnorm(n, mean = 60, sd = 12)),
  tratamiento = sample(c("A", "B", "C"), n, replace = TRUE),
  complicaciones = rbinom(n, 1, 0.25),
  duracion_cirugia = round(runif(n, min = 30, max = 180)),
  imc = round(rnorm(n, mean = 27, sd = 4), 1)
)

# Simulamos el tiempo de recuperaci√≥n usando un modelo log-lineal
log_tiempo_medio <- 3 + 0.01 * datos_cirugia$edad +
  ifelse(datos_cirugia$tratamiento == "B", 0.2,
         ifelse(datos_cirugia$tratamiento == "C", 0.4, 0)) +
  0.5 * datos_cirugia$complicaciones +
  0.005 * datos_cirugia$duracion_cirugia +
  0.02 * datos_cirugia$imc

# Generamos tiempos de recuperaci√≥n con una distribuci√≥n log-normal
datos_cirugia$tiempo_recuperacion <- round(rlnorm(n, meanlog = log_tiempo_medio, sdlog = 0.3), 1)


modelo_gamma <- glm(tiempo_recuperacion ~ edad + tratamiento,
                    data = datos_cirugia, family = Gamma(link = "inverse"))
```

### üîπ Regresi√≥n lineal (caso especial de GLM) {-}
- **Distribuci√≥n:** Normal
- **Funci√≥n de enlace:** Identidad
- **Ejemplo m√©dico:** nivel de colesterol en sangre

```{r}
set.seed(987)  # Para reproducibilidad

n <- 600
datos_cardio <- data.frame(
  edad = round(rnorm(n, mean = 50, sd = 10)),
  sexo = sample(c("Hombre", "Mujer"), n, replace = TRUE),
  peso = round(rnorm(n, mean = 70, sd = 12), 1),
  altura = round(runif(n, min = 1.50, max = 1.90), 2)
)

# Calculamos el IMC
datos_cardio$imc <- datos_cardio$peso / (datos_cardio$altura)^2

# Variables adicionales
datos_cardio$dieta <- rbinom(n, 1, prob = ifelse(datos_cardio$sexo == "Mujer", 0.4, 0.3))
datos_cardio$ejercicio <- round(runif(n, min = 0, max = 10), 1)

# Simulamos el nivel de colesterol usando un modelo lineal
colesterol_base <- 200 + 0.3 * datos_cardio$edad +
  ifelse(datos_cardio$sexo == "Hombre", 10, 0) +
  1.2 * datos_cardio$imc +
  -5 * datos_cardio$dieta +
  -0.4 * datos_cardio$ejercicio

# A√±adimos variabilidad aleatoria
datos_cardio$colesterol <- round(colesterol_base + rnorm(n, sd = 15), 0)
modelo_normal <- glm(colesterol ~ dieta + ejercicio,
                     data = datos_cardio, family = gaussian())
```


### Elecci√≥n del modelo correcto

Para elegir el GLM adecuado, debes considerar:

1. **¬øQu√© tipo de variable es la respuesta?**
   - Binaria ‚Üí log√≠stica
   - Conteo ‚Üí Poisson o binomial negativa
   - Positiva continua ‚Üí Gamma
   - Proporciones ‚Üí Beta (fuera de GLM b√°sico, pero hay extensiones)

2. **¬øHay sobredispersi√≥n?**
   - Si la varianza es mayor que la media en conteos ‚Üí usa binomial negativa

3. **¬øNecesito interpretar resultados cl√≠nicos?**
   - Odds ratios, tasas relativas... todo esto lo obtienes f√°cilmente al exponentiar los coeficientes


### Ejemplo pr√°ctico: elecci√≥n del modelo en medicina {-}

Imagina que trabajas con un dataset sobre pacientes operados y quieres estudiar cu√°nto tardan en recuperarse.

Tienes estas variables:

- `tiempo_recuperacion`: d√≠as desde la operaci√≥n hasta alta hospitalaria
- `edad`: a√±os
- `tratamiento`: tipo de intervenci√≥n (A, B, C)
- `complicaciones`: s√≠/no

Podr√≠amos usar un GLM Gamma con enlace logar√≠tmico:

```{r}
set.seed(1234)  # Para reproducibilidad

n <- 350
datos_operados <- data.frame(
  edad = round(rnorm(n, mean = 60, sd = 10)),
  tratamiento = sample(c("A", "B", "C"), n, replace = TRUE),
  complicaciones = rbinom(n, 1, 0.2),
  duracion_cirugia = round(runif(n, min = 30, max = 180)),
  imc = round(rnorm(n, mean = 27, sd = 4), 1)
)

# Simulamos el tiempo de recuperaci√≥n usando un modelo log-lineal
log_tiempo_medio <- 3 + 0.01 * datos_operados$edad +
  ifelse(datos_operados$tratamiento == "B", 0.2,
         ifelse(datos_operados$tratamiento == "C", 0.4, 0)) +
  0.5 * datos_operados$complicaciones +
  0.005 * datos_operados$duracion_cirugia +
  0.02 * datos_operados$imc

# Generamos tiempos de recuperaci√≥n con una distribuci√≥n log-normal
datos_operados$tiempo_recuperacion <- round(rlnorm(n, meanlog = log_tiempo_medio, sdlog = 0.3), 1)

modelo_recuperacion <- glm(tiempo_recuperacion ~ edad + tratamiento + complicaciones,
                           data = datos_operados, family = Gamma(link = "log"))
summary(modelo_recuperacion)
```

Este modelo respeta la naturaleza positiva y sesgada del tiempo de recuperaci√≥n, y nos permite interpretar los efectos como factores multiplicativos del tiempo medio de recuperaci√≥n.


### Interpretaci√≥n de los coeficientes

Los coeficientes de un GLM se interpretan en escala del predictor lineal, pero al aplicar la funci√≥n de enlace inversa, podemos obtener predicciones en la escala original de la variable respuesta.

Por ejemplo, en un modelo log√≠stico:

```{r}
exp(coef(modelo_logistico)["fumador"])
```

Nos dar√≠a el **odds ratio** asociado al h√°bito tab√°quico, algo muy com√∫n en estudios m√©dicos.


### Diagn√≥stico b√°sico de modelos

Aunque veremos diagn√≥sticos m√°s avanzados en cap√≠tulos posteriores, aqu√≠ tienes algunas herramientas √∫tiles:

```{r}
# Resumen del modelo
summary(modelo_recuperacion)

# Coeficientes exponentiados (√∫til para logit y log)
library(broom)
tidy(modelo_logistico, exponentiate = TRUE, conf.int = TRUE)

# Predicciones
predict(modelo_recuperacion, type = "response")
```


## üìò Cap√≠tulo 3: Regresi√≥n log√≠stica en medicina

### Objetivos del cap√≠tulo: {-}
- Entender qu√© es la regresi√≥n log√≠stica y cu√°ndo usarla
- Aprender a construir un modelo log√≠stico en R
- Interpretar los coeficientes como **odds ratios**
- Evaluar el ajuste del modelo (AUC, curva ROC, matriz de confusi√≥n)
- Visualizar efectos de las variables predictoras


### ¬øQu√© es la regresi√≥n log√≠stica? {-}

La **regresi√≥n log√≠stica** es un tipo de Modelo Lineal Generalizado (GLM) utilizado cuando la variable dependiente es **binaria**, es decir, tiene dos posibles resultados:

- √âxito / Fracaso
- Presencia / Ausencia
- S√≠ / No
- Enfermo / Sano

En lugar de predecir directamente el valor de la variable respuesta, la regresi√≥n log√≠stica predice la **probabilidad** de que ocurra un evento.

La relaci√≥n entre las variables independientes y la probabilidad se modela mediante la **funci√≥n logit**:

$$
\log\left(\frac{p}{1 - p}\right) = \beta_0 + \beta_1 x_1 + \dots + \beta_p x_p
$$

Donde $p$ es la probabilidad de que ocurra el evento.


### Ejemplo m√©dico: Predicci√≥n de riesgo de diabetes  {-}

Usaremos el dataset simulado `datos_medicos`, que contiene informaci√≥n de 500 pacientes y una variable binaria `diabetes` que indica si tienen o no diabetes.


### Construcci√≥n del modelo log√≠stico  {-}

Vamos a construir un modelo para predecir la probabilidad de tener diabetes en funci√≥n de la edad, IMC, si fuma y si hay antecedentes familiares.

```{r}
modelo_logistico <- glm(diabetes ~ edad + imc + fumador + familia_diab,
                        data = datos_medicos, family = binomial(link = "logit"))

summary(modelo_logistico)
```

### Salida (resumen): {-}
Este c√≥digo nos dar√° una salida similar a:

```
Coefficients:
              Estimate Std. Error z value Pr(>|z|)    
(Intercept)    -5.9321     0.7541  -7.866 3.67e-15 ***
edad            0.0493     0.0121   4.074 4.63e-05 ***
imc             0.1011     0.0247   4.093 4.26e-05 ***
fumador         0.7812     0.2338   3.341 0.000835 ***
familia_diab    1.1823     0.2714   4.357 1.32e-05 ***
```


### Interpretaci√≥n de los coeficientes  {-}

Los coeficientes est√°n en escala log-odds, pero al exponentiarlos obtenemos los **odds ratios**, que son m√°s interpretables cl√≠nicamente.

```{r}
library(broom)
tidy_modelo <- tidy(modelo_logistico, exponentiate = TRUE, conf.int = TRUE)
tidy_modelo
```

Ejemplo de interpretaci√≥n:

- Un punto adicional de **IMC** aumenta la **odds de tener diabetes en un factor de aproximadamente 1.10** (un 10% m√°s de odds).
- Tener **antecedentes familiares de diabetes** multiplica por **3.26** las probabilidades de tener diabetes.


### Evaluaci√≥n del modelo  {-}

### 1. Predicciones de probabilidad  {-}

```{r}
predicciones <- predict(modelo_logistico, type = "response")
head(predicciones)
```

### 2. Curva ROC y AUC  {-}

```{r}
library(pROC)
roc_obj <- roc(datos_medicos$diabetes, predicciones)
plot(roc_obj, main = "Curva ROC del modelo log√≠stico")
auc(roc_obj)
```

Un **AUC cercano a 1** indica buen rendimiento discriminativo.

### 3. Matriz de confusi√≥n  {-}

```{r}
predicciones_clase <- ifelse(predicciones > 0.5, 1, 0)
table(real = datos_medicos$diabetes, predicho = predicciones_clase)
```

### 4. M√©tricas b√°sicas  {-}

```{r}
library(caret)
confusionMatrix(factor(predicciones_clase), factor(datos_medicos$diabetes))
```


### Visualizaci√≥n de efectos  {-}

### Usando `visreg`:  {-}

```{r}
library(visreg)
visreg(modelo_logistico, "imc", scale = "response",
       xlab = "√çndice de masa corporal", ylab = "Probabilidad de diabetes")
```

### Efecto de antecedentes familiares:  {-}

```{r}
visreg(modelo_logistico, "familia_diab", scale = "response",
       xlab = "Antecedentes familiares", ylab = "Probabilidad de diabetes")
```


### Conclusi√≥n  {-}

La regresi√≥n log√≠stica es una herramienta fundamental en investigaci√≥n m√©dica para modelar variables binarias. Permite:

- Predecir riesgos (ej. desarrollo de enfermedades)
- Calcular odds ratios f√°cilmente
- Validar modelos con m√©tricas cl√≠nicas relevantes (AUC, sensibilidad, especificidad)
- Visualizar efectos de forma intuitiva


## üìò Cap√≠tulo 4: Regresi√≥n de Poisson y binomial negativa en medicina

### Objetivos del cap√≠tulo: {-}
- Entender qu√© es un modelo de conteo y cu√°ndo usarlo
- Aprender a construir modelos de Poisson y binomial negativa en R
- Detectar y manejar la **sobredispersi√≥n**
- Interpretar los coeficientes como **tasas relativas**
- Validar y visualizar resultados cl√≠nicos relevantes


### ¬øQu√© es la regresi√≥n de Poisson?

La **regresi√≥n de Poisson** es un tipo de Modelo Lineal Generalizado (GLM) usado cuando la variable dependiente representa **conteos**, es decir, valores enteros no negativos:

- N√∫mero de hospitalizaciones en un a√±o
- N√∫mero de reca√≠das
- N√∫mero de eventos adversos
- N√∫mero de infecciones

Este modelo asume que la **media y la varianza son iguales**, lo cual no siempre ocurre en la pr√°ctica m√©dica.


### Ejemplo m√©dico: N√∫mero de hospitalizaciones {-}

Usaremos el dataset simulado `datos_hosp`, que contiene informaci√≥n de 300 pacientes y una variable `hospitalizaciones` que indica cu√°ntas veces han sido hospitalizados en el √∫ltimo a√±o.


### Construcci√≥n del modelo de Poisson {-}

Vamos a construir un modelo para predecir el n√∫mero de hospitalizaciones en funci√≥n de la edad, enfermedad, IMC, si fuma y el tiempo desde el diagn√≥stico.

```{r}
modelo_poisson <- glm(hospitalizaciones ~ edad + enfermedad + bmi + fumador + tiempo_enfermedad,
                      data = datos_hosp, family = poisson())

summary(modelo_poisson)
```

### Salida (resumen): {-}
Ejemplo de salida:

```
Coefficients:
                  Estimate Std. Error z value Pr(>|z|)    
(Intercept)       -1.98      0.15    -13.2   <2e-16 ***
edad               0.03      0.003     9.9   <2e-16 ***
enfermedadDiabetes 0.41      0.08      5.1   3e-07 ***
enfermedadEPOC     0.69      0.07     10.1   <2e-16 ***
bmi                0.02      0.005     4.2   2e-05 ***
fumador            0.52      0.07      7.4   1e-13 ***
tiempo_enfermedad  0.05      0.009     5.7   1e-08 ***
```



### Interpretaci√≥n de los coeficientes {-}

Los coeficientes est√°n en escala logar√≠tmica, por lo que al exponentiarlos obtenemos las **tasas relativas**.

```{r}
library(broom)
tidy_modelo <- tidy(modelo_poisson, exponentiate = TRUE, conf.int = TRUE)
tidy_modelo
```

### Ejemplo de interpretaci√≥n: {-}

- Un punto adicional de **IMC** multiplica la tasa de hospitalizaci√≥n por **1.02**.
- Ser **fumador** multiplica la tasa de hospitalizaci√≥n por **1.68**.
- Tener **EPOC** multiplica la tasa por **2.00** respecto a tener HTA.


### Diagn√≥stico: ¬øHay sobredispersi√≥n? {-}

Un supuesto importante de la regresi√≥n de Poisson es que la **varianza sea igual a la media**. En muchos casos m√©dicos esto no se cumple ‚Üí **sobredispersi√≥n**.

### Comprobaci√≥n r√°pida: {-}

```{r}
if (var(datos_hosp$hospitalizaciones) > mean(datos_hosp$hospitalizaciones)) {
  print("Advertencia: Sobredispersi√≥n detectada.")
}
```

Tambi√©n puedes calcular el cociente:

```{r}
phi <- sum(residuals(modelo_poisson, type = "pearson")^2) / df.residual(modelo_poisson)
print(paste("√çndice de dispersi√≥n:", phi))
```

Si **phi > 1.5**, hay sobredispersi√≥n significativa.


### Alternativa: Regresi√≥n binomial negativa {-}

Cuando hay sobredispersi√≥n, se puede usar la **regresi√≥n binomial negativa**, que permite que la varianza sea mayor que la media.

```{r}
library(MASS)
modelo_negbin <- glm.nb(hospitalizaciones ~ edad + enfermedad + bmi + fumador + tiempo_enfermedad,
                        data = datos_hosp)

summary(modelo_negbin)
```

Este modelo tambi√©n interpreta los coeficientes como tasas relativas.


### Evaluaci√≥n del modelo {-}

### 1. Predicciones de conteo esperado {-}

```{r}
predicciones <- predict(modelo_negbin, type = "response")
head(predicciones)
```

### 2. Gr√°fico de residuos {-}

```{r}
plot(fitted(modelo_negbin), residuals(modelo_negbin, type = "pearson"))
```

### 3. Comparaci√≥n de modelos (AIC) {-}

```{r}
AIC(modelo_poisson, modelo_negbin)
```

El modelo con menor AIC tiene mejor ajuste.


### Visualizaci√≥n de efectos {-}

### Usando `visreg`: {-}

```{r}
library(visreg)
visreg(modelo_negbin, "bmi", scale = "response",
       xlab = "√çndice de masa corporal", ylab = "N√∫mero esperado de hospitalizaciones")
```

### Efecto de ser fumador: {-}

```{r}
visreg(modelo_negbin, "fumador", scale = "response",
       xlab = "Fumador", ylab = "N√∫mero esperado de hospitalizaciones")
```


### Conclusi√≥n {-}

La regresi√≥n de Poisson y la binomial negativa son herramientas clave para modelar variables de conteo en investigaci√≥n m√©dica. Permite:

- Modelar eventos repetidos (ej. hospitalizaciones, reca√≠das)
- Manejar sobredispersi√≥n con la binomial negativa
- Interpretar resultados como **tasas relativas**
- Visualizar efectos de forma intuitiva

